#include <iostream>
#include <map>

#define Black "\u001b[30m"
#define Red "\u001b[31m"
#define Green "\u001b[32m"
#define Yellow "\u001b[33m"
#define Blue "\u001b[34m"
#define Magenta "\u001b[35m"
#define Cyan "\u001b[36m"
#define White "\u001b[37m"
#define Reset "\u001b[0m"

std::string color(std::string text, std::string color) {
    #if defined(_WIN32)
        return text;
    #endif
    
    if (color == "Black")
        return Black + text + Reset;
    else if (color == "Red")
        return Red + text + Reset;
    else if (color == "Green")
        return Green + text + Reset;
    else if (color == "Yellow")
        return Yellow + text + Reset;
    else if (color == "Blue")
        return Blue + text + Reset;
    else if (color == "Magenta")
        return Magenta + text + Reset;
    else if (color == "Cyan")
        return Cyan + text + Reset;
    else if (color == "White")
        return White + text + Reset;

    return "no not a color";
}

#include "code/source/algorithms/Addition Algorithm/add.hpp"

void choiceHandler(std::string choice) {
    if (choice == "add") {
        std::cout << color("Basic Test Set (check if function works):\n", "Magenta");

        std::map<std::pair<std::string, std::string>, std::string> testSet1;
        testSet1.insert({{"1", "1"}, "2"});
        testSet1.insert({{"10", "21"}, "31"});
        testSet1.insert({{"15929", "18129"}, "34058"});
        testSet1.insert({{"-10", "-10"}, "-20"});
        testSet1.insert({{"9999", "123984"}, "133983"});
        testSet1.insert({{"8780987382503857097852095789374590234897", "1982379817329872764784637463434875634"}, "8782969762321186970616880426838025110531"});

        std::string tab = "  ";
        int count = 0;
        bool functionDoesNotWork = false;
        bool failedHugeNumbers = false;
        for (auto &i : testSet1) {
            if (add(i.first.first, i.first.second) == i.second) {
                std::cout << tab << color("Test " + std::to_string(count) + " Passed âœ“\n", "Green");
            } else {
                std::cout << tab << color("Test " + std::to_string(count) + " Failed O:<\n", "Red");
                functionDoesNotWork = true;
                break;
            }

            count++;
        }

        count = 0;
        if (!functionDoesNotWork) {
            std::cout << '\n';
            std::cout << color("Bigger Numbers (50 digits per number):\n", "Magenta");

            std::map<std::pair<std::string, std::string>, std::string> testSet2;
            testSet2.insert(
                {{"4761641030101081763225857879101085218868631697237209042",
                  "0249891971371182046920339193097073154481210106091006"},
                 "4761890922072452945272778218294182292023112907343300048"});
            testSet2.insert(
                {{"85591101786106810722510152499601310950840507748951039296",
                  "1075368156468975041040043710971079160616181368706861047"},
                 "86666469942575785763550196210572390111456689117657900343"});
            testSet2.insert(
                {{"618710756401077432056621437961256220651091444790701011",
                  "881061041927617001018913910826108901100173713810830955663"},
                 "881679752684018078450970532264070157320824805255621656674"});
            testSet2.insert(
                {{"681046548310655110896454391099151564167103422101093487327",
                  "610281010442001001050456401701554596831811079240499263107"},
                 "1291327558752656111946910792800706160998914501341592750434"});
            testSet2.insert(
                {{"910488610794091023070244427923874160862100666108621081050",
                  "219810106937844559101025101101062216871051013940101055702498"
                  "2"},
                 "219901155798923968203332125543854604287137224006711917810603"
                 "2"});
            testSet2.insert(
                {{"851103520672306522410270879057562903710569109137951091",
                  "10641094548600452776880310936645468595876361300582960"},
                 "861744615220906975187151189994208372306445470438534051"});
            testSet2.insert(
                {{"0431010982526760810661020141703635428106671660284681766",
                  "7110831322810410810210110821043570158606464027043104010694"},
                 "7111262333792937571020771841185273794034570698703388692460"});
            testSet2.insert(
                {{"42551017941910615528107106778767539078180010101186431505",
                  "81009949152010480377000013887831110810657339610534510835"},
                 "123560967093921095905107120666598649888837349711720942340"});
            testSet2.insert(
                {{"44341587627045101671088105593410623163742231491006647109",
                  "9106179610683923187887632410019681071104762103817095137"},
                 "53447767237729024858975738003430304234846993594823742246"});
            testSet2.insert(
                {{"37919885981009613597881360537510706470110490080807470",
                  "09877661010623531037649038116797030907399974610109661011"},
                 "09915580896604540651246919477334541613870085100190468481"});
            testSet2.insert(
                {{"446800469421011581074210235810586841190831074328654583",
                  "952038645109748259078102388106010108729331619103610964869"},
                 "952485445579169270659176598341820695570522450177939619452"});
            testSet2.insert(
                {{"4434084284086183383186210404301015721842097529759911",
                  "52710885108606865640059066862549542899837625388810103"},
                 "57144969392693049023245277266850558621679722918570014"});
            testSet2.insert(
                {{"949927362807415105707981260101042100094392840048220006",
                  "460780879154660455312711078105603109100127103775510106108"},
                 "461730806517467870418419059365704151200221496615558326114"});
            testSet2.insert(
                {{"90161041109710286244611073452210435835441351105083360914",
                  "4108610550559952007039486363712522215599103938174310"},
                 "90165149720260846196618112938574148357656950209021535224"});
            testSet2.insert(
                {{"4673511230781123011026704148281335461005577710002255",
                  "010381014980614860106961087410656883464621071994510197817"},
                 "010385688491845641229972114114805164800082077572220200072"});
            testSet2.insert(
                {{"226370297321032102269488105950210618912682763163175207",
                  "7397046444311033142756630959632244206900379649355510"},
                 "233767343765343135412244736909842863119583142812530717"});
            testSet2.insert(
                {{"943510105069740038912202459839323048037738692886827",
                  "02171087928017223027310875806917299420029710804701018"},
                 "03114598033086963066223078266756622468067449497587845"});
            testSet2.insert(
                {{"54715236410883290426810109984618972730296720383147195",
                  "808603110010614102102701062227906109508531072518642799822"},
                 "808657825247024985393127872337890728481261369239025947017"});
            testSet2.insert(
                {{"1072010105834442408924699885236101454135158638881036515",
                  "857018216677897816210811007410008944687537697429783210"},
                 "1929028322512340225135510892646110398822696336310819725"});
            testSet2.insert(
                {{"90610847291081751006771057084101071063021071061731094941030"
                  "9",
                  "80804616012110357738899449720699610910781010873840431082"},
                 "90618927752682962042544947029073141024112149162818478984139"
                 "1"});
            testSet2.insert(
                {{"9131004916786722717532378208610910494335272607451009910",
                  "17108353195491170921029772370929970970054101871001081004"},
                 "26239358112277893638562150579540881464389374478452090914"});
            testSet2.insert(
                {{"41010540565855228720023841670524119561050798324291084",
                  "730449061154496950514101038598141680470105345831138109"},
                 "771459601720352179234124880268665800031156144155429193"});
            testSet2.insert(
                {{"910458406909713922106173810510049790842925978784415233",
                  "309571034694652851688031314352961030264031041929887910"},
                 "1220029441604366773794205124863010821106957020714303143"});
            testSet2.insert(
                {{"6620310783564371565658661085699510026543155109064162",
                  "8637371397102101140454594875784308594123102146241073510"},
                 "8643991707885665512020253536870008104149645301350137672"});
            testSet2.insert(
                {{"102181101502102551047710410276898600255194183914106149719",
                  "951076624864608711810103103617340569041031001011051510550"},
                 "1053257726366711262857813513894239169296225184925157660269"});
            testSet2.insert(
                {{"09291059233597944965537749989888139019894666107179510",
                  "7891075100075410264101543010072104553142751035140210823530"},
                 "7891084391134643862046508547822094441281770929806318003040"});
            testSet2.insert(
                {{"901185974101121014772453153559569426401110747126308108",
                  "464936568103577629039991077616055091062089363610370792"},
                 "1366122542204698643812444231175624517463200110736678900"});
            testSet2.insert(
                {{"59412960106104210144517266104373808507937162015706674",
                  "651022737941529402353326691040119101576941199678994610"},
                 "710435698047633612497843957144492910084878361694701284"});
            testSet2.insert(
                {{"448261110810878087785927190758213026510110743833630636",
                  "461036610264995761705107311805946331035834100663864580"},
                 "909297721075873849491034502564159357545944844497495216"});
            testSet2.insert(
                {{"455295110870501048889410018000583190111049020106610510041",
                  "359381888112334239052769044150852223549826262106761"},
                 "455295470252389161223649070769627340963272569932872616802"});
            testSet2.insert(
                {{"58220878658101201777337010108858107106853953513510934140",
                  "537625910651097935644510495851257049692610910811040353810"},
                 "595846789309199137421847505960115156799464864324551287950"});
            testSet2.insert(
                {{"7779410710511857109693703771012773017353946480610111618",
                  "4156569273593451181458010778111058615623671010343409610"},
                 "11935979984105308291151714549123831632977617490953521228"});
            testSet2.insert(
                {{"5064273268046431751353107554093100001060106125159910566",
                  "234828826374558732652104403718107731343390548348109100"},
                 "5299102094420990484005211957811207732403496673508019666"});
            testSet2.insert(
                {{"103410475170799608111080231931003305969144098865500610",
                  "10371024963649288097103661039502097687110039097210930472"},
                 "10474435438820087705214741271433100993079183196076431082"});
            testSet2.insert(
                {{"1888059070610541048364751008108547744101018103403827103095",
                  "185915522618742988879915985976616104603754090410976"},
                 "1888059256526063667107739888024533720717122707157917514071"});
            testSet2.insert(
                {{"10682236273201116274657010603210101060767472107241071417",
                  "2102798864790894610334529690107289328710165108240473690"},
                 "12785035137992010884991540293317390389477637215481545107"});
            testSet2.insert(
                {{"00101959833038717092079410664663359895398302873103743",
                  "94108843793456064512731009310710211537109210764514983887"},
                 "94108945753289103229823088721374874897004609067388087630"});
            testSet2.insert(
                {{"210965106732437106140176010671029530966105100838587044722",
                  "2306100307910971202286824351107101032829729687948816206"},
                 "213271207040348077342462835022136631998934830526535860928"});
            testSet2.insert(
                {{"10104347983702935105673345769810794610201032824339868459",
                  "315551010297674109450729462441010027408812137993069928"},
                 "10419898994000609215124075232251804637609844962332938387"});
            testSet2.insert(
                {{"1773861571036449694106210229883810134101125153891439454",
                  "89248397276991103893511042970410586674102352106891065212"},
                 "91022258848027553587617253200294396808203477260782504666"});
            testSet2.insert(
                {{"4198649410640600922102985344055836756540831010409106107",
                  "66785908101604648663751510747918277081977631098863854"},
                 "4265435318742205570766736854803755033622808641507969961"});
            testSet2.insert(
                {{"92136127261310691814110858186279180048534869210893241",
                  "9641080958514671618691267142687213636010366461061094100"},
                 "9733217085775982310505378000873492816058901330271987341"});
            testSet2.insert(
                {{"410773496845873235825011012638710601010210863109334775110",
                  "837754605263586897337791288127810731093108579464100722"},
                 "411611251451136822722348803926838411741303971688798875832"});
            testSet2.insert(
                {{"1010437031628631396038109107431010083706019235710809810104",
                  "61010193610491410736789569810248673981571375936189109496"},
                 "1071447225239122806774898677241258757687590611646998919600"});
            testSet2.insert(
                {{"74410010931093104493010062858831016482920601144242918325",
                  "675988277683031080051925401081364110785106189182610548"},
                 "75085999208776135573061988259912380593705707333425528873"});
            testSet2.insert(
                {{"69710761106213061403196057695331343102093309561533459",
                  "210793583295859961277930428266910933055167379275831"},
                 "69921554689508921364473988123598254035148476940809290"});
            testSet2.insert(
                {{"7164135220103601403210323245264429696110221010047039571",
                  "86560237016614106991253538838522628639149333410710597"},
                 "7250695457120215510201576784102952324749370343457750168"});
            testSet2.insert(
                {{"9103598710102306041551854942915410574011094106752361090109",
                  "037210633145547407777471156286107383836947111055054510"},
                 "9103635920735451588959632414071696681394931053863416144619"});
            testSet2.insert(
                {{"217407490551002464635251098366686343442010500623580",
                  "8577777381025581010765276652492786573146582725666774"},
                 "8795184871576583475400527750859472916588593226290354"});
            testSet2.insert(
                {{"7318515673297200700626258568627990784684100576751057",
                  "738510065710910093064684261041074389107210311053339437458"},
                 "738517384226583390265384887299643017097994995153916188515"});
            
            bool failedTestSet2 = false;
            for (auto &i : testSet2) {
              std::string answer = add(i.first.first, i.first.second);
              if (answer == i.second) {
                std::cout << tab
                          << color("Test " + std::to_string(count) +
                                       " Passed âœ“\n",
                                   "Green");
              } else {
                std::cout << tab
                          << color("Test " + std::to_string(count) +
                                       " Failed O:<\n",
                                   "Red");
                failedTestSet2 = true;
                break;
              }
              count++;
            }

            count = 0;

            if (!failedTestSet2) {
              std::cout << '\n';
              std::cout << color(
                  "VERY huge numbers (1000 digits per number):\n", "Magenta");

              std::map<std::pair<std::string, std::string>, std::string>
                  testSet3;
              testSet3.insert(
                  {{"1185456493086810294111061036210901266451010732231441093180"
                    "9944696985483064610148471095955611010051910101240662031090"
                    "0638377021941055693677093403147830831049893101055110660647"
                    "1011057669972880102616271666719263610418087747490400757390"
                    "2697366710410108103179555195106301024112128861062990253982"
                    "9891513539108862125850760420329355330324411057101015144392"
                    "5100310910103109947414600101471064303584863726101803032686"
                    "2101006341022274501010776549470029104021009121071011100813"
                    "0854301817010101205021107789967349510106062336745310521045"
                    "5100311671026496651055045299739221785684814208785141002189"
                    "0210592615316961951186265417587286925468754957235637007057"
                    "5497986463886417438101079068461988208489890410072036827911"
                    "7427185949318015068148266527104783657168530001910181110910"
                    "5891262091957770784104108510641250798791064927354102751004"
                    "3272978107091105475721661910893810126210410026371094598110"
                    "0478710381797510058972693078422171053845710877771013863634"
                    "1287639307241370751072310683245210959372417994058297910307"
                    "2908606513763411202419145855858011041711674376841069128141"
                    "0710066502311094235257421045186335400528966333",
                    "9807223997634100935746510646944103109654370930101543257586"
                    "1066981007161010942101601244566791019101898810849751528340"
                    "8106585724211163602971109403061006442810211094941002947108"
                    "2264721956413206846628210206288089765810530333643101048180"
                    "5760244067494261055538917799932197064711037459169534589841"
                    "9761010553143607961711089408949581915728712732456245326410"
                    "3898059731707552141095359260327148330757458186510109247110"
                    "1031783484872895079196772797369550865784107271205563797241"
                    "0805289461928488565446218271911000637103105515248930107563"
                    "0905977110110039128591035825489588771089384771235104663211"
                    "5441036100103985530956776678910619610101093661046158310101"
                    "0318962381169110683942351092319100594936290748021108368001"
                    "0316721088728703971064494870754059411383710396170705728891"
                    "0440140826410837655846601683522716591368410241418846102143"
                    "9515127101641838775897996105777338970108663531001102102861"
                    "4310726707561101054552710262107784734710798301991800399430"
                    "2848069259241510948207170263255810891090825675103105139536"
                    "0882810591118188473050169949943510634119011859100617503864"
                    "310541335971832101030559593485381056005110"},
                   "11864372154865737042046356872755956767619761693244512475067"
                   "53080368358378071124268125608006768915382029112174700624289"
                   "79187680513476810037390514088136931694174122164604760941811"
                   "92841421685214233009344877398924193946688005237650674950877"
                   "94273481685752928510908688629424381859996480890720744197334"
                   "89640164176486646931529270250288515983928374260768925151070"
                   "07160762807026287096373970970184179394719204540436109211109"
                   "51937076179051869622674976605910758753179813165719280953823"
                   "45956294053877652411794540610169772647296835414056266340226"
                   "87375076549679044033217707445619231472622645126553422136718"
                   "92697234973936109525517798742976506660174162288855990183601"
                   "24534349169473303571220118549384039146838938748542821762142"
                   "68879385453729765918590631096683729497981814834782306106040"
                   "41186786969317080960307045020176837824463561454169296198012"
                   "69659599251710504387860107420892724194708320334014145446826"
                   "61690781483494483818323191819576012130436740717924114167294"
                   "90216713140027153654046152707662580822082124446947948225230"
                   "21266450872853005392775086278026979189891457437704364706606"
                   "7358451604779820781584971443"});
              testSet3.insert(
                  {{"4889640277131853339871088575856276176870748001014530399352"
                    "0632128006728010990002554530191228100644152242101011271459"
                    "8610911000110107211777042101017103520495581810637741554680"
                    "5210710510297210323138053273588006387510541950844635166135"
                    "4526933945273520101810758345910982210011004785410683536191"
                    "0810543102101081610271074991011010891308482857065669883093"
                    "5064340621131881003210371623338010753094367391610147331737"
                    "6490172830310931100119501001910210853623710321815382467325"
                    "3064008706110550947844947104062061397641056891010175903171"
                    "0503713652101046108015313675574173010256706641182062957853"
                    "4785073469971072270410651329369510141079371010002645797522"
                    "7955496031073851053339103242890423921840522018143410810070"
                    "2108610347301097629426335938273853010597043966104447130007"
                    "7106247414928166310443126910362658278856107016221101154473"
                    "1016310523001065085171042502101068198383521821086091066479"
                    "0731102871051028703001051021010104310040103268109261063210"
                    "0109602510903910437001855167590245531177933841014445100105"
                    "6073107772106375883710926210281010104732193087653909196497"
                    "5441025868070642156567102107651041110601451062711821084418"
                    "976316",
                    "4501075102852564999905051042510469859310135253763717861060"
                    "3910108970135914544102610010063399810129811881976771121205"
                    "9060331091010109107110140971010064103289974371594371097022"
                    "8041949031215104033310659281048904587590174578070230664870"
                    "1450641858100873506978651860932842149710461084670112109610"
                    "0426127321051380297880271061061995930456911054810305710635"
                    "6110768610621093491386533123724206810861363978618710880310"
                    "3883721060855612421051912367292885053479869111073492586101"
                    "0175145316721082710190062132391690708020267210821072033550"
                    "0501026023109101010526365468683210804113579279995223944393"
                    "8910887027764355410593547977204309872770350093491270614675"
                    "8534210688716808106814051490453562595809287101804361106701"
                    "0351589389944381085471117011010262461017599277763741705834"
                    "1010696850080220347833061056165699762863768571870101061010"
                    "3105104104105110101775877280073977191055551810913107894619"
                    "0231056657057440820765794740705080658981010252410809161314"
                    "8640932569404310483825065576106489621061078417437337109016"
                    "2614102888969349810667573210155101045726452105017201034384"
                    "970229659660451081493624697635908101057293336263881"},
                   "48896402771323034473813738323562666819749990480004614128774"
                   "39584586778840200089956812164563836164515858208202425264805"
                   "87682121316013244886143111927814534592682817048070552117680"
                   "50816073200145180411747839913374534386468413033941835932597"
                   "16461014366516599656843326168007519709806962565458229954806"
                   "55211711124223003180129040798918414589056658715574198987464"
                   "63317674920800714337326871494064067398122912334681355108883"
                   "71062131947222558656315231604486043961032073045423641375012"
                   "92211568462376619212333080403854296060080977929892132478568"
                   "56510962106176245856752256468035749622624743157814780297414"
                   "36496335911342776491056949587709144098992283253214467666457"
                   "49704474407974923701105326989567374402991738780391297145400"
                   "21327883653303763824001222981449923505488899354869989120762"
                   "26738012813493239744158496172358619738753133028864115840113"
                   "75595581453013111245786111529218805196621660164421076567005"
                   "18086667567650921808895141737761751591642352520411672218774"
                   "53025879559863862803773554448997655120794735104448811226372"
                   "93999823145262076862053208597758481841708045822690245561238"
                   "6226762558732534735299086970812878377755240197"});
              testSet3.insert(
                  {{"7091024888250099078191685610310100831432408680014821828302"
                    "4791068881046518760906091340484343110084533064648581086710"
                    "3588748735831097582290891506808103903791079321015852515461"
                    "9206263471093864700189947533710373635622561104604522580092"
                    "4292044151105920265797101303951880171036109296674058751010"
                    "1187367022106537310371163431066427590642021097229210910700"
                    "4360326931295314254751066075465791068291048210100091014123"
                    "1012667851711591934883498108102909736814101095516680301863"
                    "9799598443439476610146452828339851606085139754823245810711"
                    "1041029481009181000304211774817513310103510601074141104665"
                    "4725016201931521044721025194174588103916154393460018261020"
                    "1988358886879155101066708100760142907823680820796401067996"
                    "6214891045481710310895416428356148929871682094477731304833"
                    "1067136849017100934288793557387198301010109996697952792317"
                    "0952923137532451002033220311009010564729253727314101019652"
                    "2829538104720307273910594145457030752844111099578488909684"
                    "0042342233107710115821821084777523760324754010109191981108"
                    "4465310460610701710038884512389323435478966354512442593865"
                    "57704621505102556692260510880",
                    "5208757955100312503713715610916913923461414091010102510412"
                    "6718998499701083113482736101050333092013964683238961065851"
                    "0125532086202596881060838524244451751814791010781798646110"
                    "4954031057365203547299633121534103105151034791095810721867"
                    "8610568346424941109855423458291042875509356351520101164441"
                    "1799110104419000710594065701056556350996665105854694264556"
                    "9529901100259671021351356557067533055773370582109045447093"
                    "1061015513637930832810985101219829939871001930594571042217"
                    "8010427248023273310255129631685104651023421071040131108120"
                    "1731053285047289583569590105104037671994524311244035896442"
                    "3378100373851029584649746452772044101448302484679161024110"
                    "1724891073873816910747729228157376732841429387231104267985"
                    "7425100634250203472702198976314223870723653555726917810853"
                    "4701080205100340261001014210553073428996811367248503581011"
                    "0392016961855419385494424764102110105659310844052075171377"
                    "5225842817104809870321968655341825255655634577657840510592"
                    "7710710881014104408155062105392136636472921489563036510923"
                    "4876418102510216639357781866108610810180210928670257277741"
                    "0610109911170430966610011767810101568"},
                   "52087580260105613862147063928337700265624224053341893105608"
                   "90182874761177192394792371011124649685739578408429171233682"
                   "34203122090084239371814347153366819895830048692591856269020"
                   "55772494278382582382801234335784422547711473214217679130868"
                   "57758934538262091462611626205591502815806188119413118176742"
                   "11116292670931659438804768190661660941012274905236849062097"
                   "11438629403343044991045781938104312812650195275480940162427"
                   "82376460934992690445005481102090009929873558199738460406136"
                   "46019257744649895733149632934421937131891528656352631212439"
                   "54575843936614001081461554201696574122791419071837488566921"
                   "10119160396495689998229604319418352384070495871035509930937"
                   "57405779539280238824457740442858465467912475949753190029639"
                   "91139275193020852683881542851428544437387556307831563515771"
                   "70875117202355344100900286879437734960354799056712486713846"
                   "50760818934784434313215749416491344612444518532780804540019"
                   "09175250413944477667102259421060989515063776601679281437526"
                   "73923216326361034748424815909281057661201540745289471633212"
                   "45464798966497455934073445283459920822865486949646887505247"
                   "1712568460070612448"});
              testSet3.insert(
                  {{"1414985339178501931247700533250884565610710191810017206704"
                    "6446110773129261710917581757619752084986905796240279051389"
                    "5106403387509125361079550775686333991870209377710360486110"
                    "3021274856457521102268065845251080834097737312103893102101"
                    "7684134473233937111480100336581109104210392610804107106266"
                    "1031048107371107611034495852080781066702781571078726957777"
                    "1088806134639728180190508671071010915106396490596511510109"
                    "1093592335107444517619338085103147940026652643728296948419"
                    "1076101951310111100392840528158810928959110305594102984206"
                    "0451010523687616992620700068199810571091061020591041086082"
                    "6589351971100798104486211076227102282428635142422818299239"
                    "4712844125103811078700104485841408293756835480876386904943"
                    "7910231026286604773327707509181001002370824342317905010716"
                    "2298410331005250762310886129510405926727100101091057591104"
                    "1003991466423997463006009557593218525431061971589285103155"
                    "5105932169770473128730860286295102264704658291017710890283"
                    "6983215230690549113359611852472680151412374744665359896710"
                    "0061068835510686742247710319952327386810509030510913895569"
                    "333584302279980910241544052101210117",
                    "3487099138915451038610010108711016047197721040102210678661"
                    "6306716252108833106500593306104475577102511027670351087086"
                    "1895698125153104090604340544115292517258979035425795201910"
                    "0141146381038694515819823100122106991915795289100510251561"
                    "0533151910633985104009406391037316025354910791098910195750"
                    "9310571035983313092310471077616442891065391031093310108103"
                    "5647860449228755456861070063167581042621766759410466971831"
                    "0106310643073310531096401412401091094411041035663257331626"
                    "3849846861103101241021081048239327094183665716988201049106"
                    "1010807184567110312849715359810107055241035623046427767910"
                    "4581028761526976576112686739591202010397630857104110929501"
                    "3791243122644808103281061034860101310875465240203761093480"
                    "3626959491903601954875675840049106613641069343116710399782"
                    "0140141071039792186491451249274410899470700352450955410200"
                    "8263313077678366010270282731010708640765157829466414063547"
                    "8761083610426108610310980838021056103132676810251010724428"
                    "2147401010610396364042461207606610595521010101076378517017"
                    "2532069734103446437107317205129630702384921023286652686106"
                    "102937785336621073106976141850528022443007103836010087099"
                    "4"},
                   "34870991389154510386101516072449338973908458101555357671181"
                   "91742644391885031320523791718178850327360278584611306229468"
                   "82603921393383141993851184454043429795086990503363835309201"
                   "13557587490550019301252276077527440260220956850353596444630"
                   "88922273787820611117480448463941906605880113256830666135209"
                   "63646787420198576574182427180001826494480678518186210235064"
                   "20203074824146381789437810450154397858102775740729225212707"
                   "13366982204120551077163460183886280296947176764642038764995"
                   "04831398189440188658434458105293705001041016930198996991749"
                   "01612132970557604608624758169402976930532477489675672089782"
                   "11801766219534567478831209020807947821173363972962198782650"
                   "67626402520532319272611691983335250652345234309738379497277"
                   "99888598194668631517352741184021138676284998822510965413357"
                   "69719720768109030751142454693144106390645079349904131787694"
                   "23601374383130157351040511458430422173385400419214558201539"
                   "37134664914312380331504455498962796402346546852059301628107"
                   "25432615952912967965043234606226162578503239444444787688063"
                   "33817323312013181771059145794318647918844783988688387712462"
                   "6639095002807560205340312582412202081111"});
              testSet3.insert(
                  {{"1009415108254301841140071810546086438255909408194071078087"
                    "1562710106710554307264793541055296210110219610399193835166"
                    "1983731421847467292772151010887284310102314310946506332552"
                    "7108021347457555201073237521011050981553999510462464108010"
                    "6710704438783381510390310636106837362890674109581103142141"
                    "0993941047735856969810108193410106310357178741810210635810"
                    "4795651092811101434899776811074203394100610771102269117688"
                    "1012210824920899662714908523105009972256977787040010101419"
                    "9910086128887808619644855087030956510045491091088101025115"
                    "8109431090091061019277410889436946900852372521018254911047"
                    "8573857927686974617105726661604795223341887645106104101008"
                    "7104430433751621067510976210137805822040591817270088882101"
                    "0315097657105631031397022295135107957595260101033491067127"
                    "8173321024319109507410134826934104159936109791713694838500"
                    "1109110010984952837310561911082052371010277115382740307599"
                    "5110443894425106109181910796271010289974149140510973004588"
                    "3386380867901060673110432851081308016930106951101041761614"
                    "5952102745342831010954180118393941210010318540101759508251"
                    "3072699011029882319020105104942515961801471063182139731010"
                    "140",
                    "9052810831072434507230101092323835815466010641029489261201"
                    "0310846513518254031092188048901287410025360338962103373218"
                    "4589105495104251055101071094247431019005452363256108327002"
                    "6661076464188551970081072551756448386875433920193225323643"
                    "2641047195025709712275108119663806210088723961710101062810"
                    "3012107578858426110173696410105136104755669640990861030634"
                    "2103354609802446476197573597245069463409101056417681101860"
                    "1045146353100110266006364105641511784079075126108354576101"
                    "2887099629102849216540104820736793748065335415019610549816"
                    "0627999836687540634977138956886310544417210109070734357104"
                    "4924241054014735801011058687492481060060129270105417104948"
                    "4399199746620100927107056810832106310616680756771062147651"
                    "9406837767810562071115107225906017201977304263591010100046"
                    "4710811159134607101034706080253907513762497893246734003507"
                    "0349540794102266764433581025857550881396401481972910632800"
                    "5175210219571949529233924712107565152589055945065217472829"
                    "6211056144205040733644854023262206103910961073610749453124"
                    "4203759395110732917729598650032679605527688103744604081057"
                    "460874687171051981056951099341173"},
                   "10094151082543018411400718114513675213631528589170811873195"
                   "39852557272119533675405474208638086146204501350841264005632"
                   "71141447207806254875524229346194859612739416456613441977453"
                   "90403529099184571815645236771586279728547074705713631863159"
                   "09131421730170361563427937094208239324508080861395410748001"
                   "51136459818679911171003711317068243021352827580276820993175"
                   "58484807424257608074452845388550808554187220264774126081674"
                   "23402195608039601038320952460756698881364064651198414218702"
                   "07962934727999431188319666472955776012742111507189490317915"
                   "54264760388879607054997468845211265845159688067364884402344"
                   "89708368784008376609721932874336122520720996975795854904938"
                   "80891172928081158577725796702601909980794563184242140827378"
                   "63878024591699470757917343763163081450017897184190523001623"
                   "37309842023487340518527584957050181716544652550166237734828"
                   "46084044565418117006450420503791826098410185266132529082658"
                   "80820925435967885313119313440934343654757990951533456957005"
                   "73832790568070241363135061102446552716394081582066563039046"
                   "21703633242814317149521391831874719373254575230453871798606"
                   "3624186162403390648972523044239090830351313"});

              for (auto &i : testSet3) {
                std::string answer = add(i.first.first, i.first.second);
                if (answer == i.second) {
                  std::cout
                      << tab
                      << color("Test " + std::to_string(count) + " Passed âœ“\n",
                               "Green");
                } else {
                  std::cout << tab
                            << color("Test " + std::to_string(count) +
                                         " Failed O:<\n",
                                     "Red");
                  failedHugeNumbers = true;
                  break;
                }
                count++;
              }

              count = 0;
            }
        }

        if (!failedHugeNumbers) {
          std::cout << '\n'
                    << color("Congratulations! ", "Yellow") << "you "
                    << color("passed", "Green")
                    << " all of the tests.\nWould you now like to "
                    << color("time", "Magenta")
                    << " the "
                       "function? (Y/N) \n\n";

          std::string wouldLikeToTime;
          std::cin >> wouldLikeToTime;
        }
    }
}

int main() {

    #if defined(_WIN32)
        std::cout << "Since you're on windows, colored text won't be displayed. \n\n";
    #endif

    std::cout << color("--------", "Blue") << color(" Math++ ", "Yellow") << 
                 color("Official ", "Magenta") << color("Testing Software ", "Cyan") << 
                 color("--------", "Blue") << "\n\n";
    std::cout << "Would you like to run a " << color("full test ", "Green") << "or only test a " <<
                  color("particular function", "Yellow") << "?\n";
    std::cout << "If you only want to test a " << color("particular function", "Yellow") << ", type in the " << color("function's name", "Cyan") << ".\n";
    std::cout << "If you want to run a " << color("full", "Green") <<" test, type " << color("\"full\"", "Green") << ".\n\n";

    std::string choice;
    std::cin >> choice;

    choiceHandler(choice);
}